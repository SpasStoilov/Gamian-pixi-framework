#LoadingEmitter.once posAsset(){
    this.tree.pos(
        @omponent Sprite; 
            args ~ ../assets/sprites/player3.png;
            name ~ player_3;
            position ~ {x:{"%":0.2}, y:{"%":0.2}};
            scale ~ {x:{srts:1}, y:{srts:1}};
            update ~ ["position", "scale"];
        <
        ,
        this.tree.get("loading_container"),
        "LoadingEmitter"
    )
}
#LoadingEmitter.once anime(){
    this.model.shift(
        "player_1", "x", 
        {
            from:  [0.5], 
            steps: [100], 
            to:    [0.7], 
            model: ["LR"]
        }
    )
    this.model.shift(
        "player_3", "scale",
        {
            from: [[1],[1]], 
            steps:[[100], [100]], 
            to:   [[1.5], [1.5]], 
            model:[["LR"], ["LR"]]
        }
    )
    // two ways:
    this.model.shift(
        "player_3", "position", 
        {
            from: [[0.2], [0.2]], 
            steps:[[100], [20] ], 
            to:   [[0.7], [0.5]],
            model:[["OR"],["OR"]]
        }
    )
    //custom anime:
    // this.model.shift(
    //     "player_3", 
    //     "position", 
    //     {
    //         from: [[0.5], [0.2]], 
    //         steps:[[100], [20] ], 
    //         to:   [[0.7], [0.5]],
    //         model:[["OR"], ["OR"]]
    //     },
    //     "oscillatePositionProcentOnly",
    //     "oscillatePositionProcentOnly",
    // )
}

>>>
@omponent Container;
    name ~ loading_container;
    emitter ~ LoadingEmitter;
    @omponent Sprite; 
        args ~ ../assets/sprites/player.png;
        name ~ player_1;
        x ~ {"%":0.5};
        y ~ {"%":0.5};
        scale ~ {x:{srts:1}, y:{srts:1}};
        update ~ ["x", "y", "scale"];
    <
<
